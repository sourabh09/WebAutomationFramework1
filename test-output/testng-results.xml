<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-24T11:39:04 IST" name="Luma ecommerce app test automation" finished-at="2023-04-24T11:39:35 IST" duration-ms="31369">
    <groups>
    </groups>
    <test started-at="2023-04-24T11:39:04 IST" name="Regression test" finished-at="2023-04-24T11:39:35 IST" duration-ms="31369">
      <class name="com.test.qa.testcases.LoginPageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:05 IST" name="setUp" finished-at="2023-04-24T11:39:12 IST" duration-ms="7132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginFunctionalityWithBlankFields(java.lang.reflect.Method)[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:12 IST" name="verifyLoginFunctionalityWithBlankFields" description="Verify that user is not able to sign in with blank username and password fields" finished-at="2023-04-24T11:39:16 IST" duration-ms="4316" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.qa.testcases.LoginPageTest.verifyLoginFunctionalityWithBlankFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertFalse(Assert.java:78)
at org.testng.Assert.assertFalse(Assert.java:88)
at com.test.qa.testcases.LoginPageTest.verifyLoginFunctionalityWithBlankFields(LoginPageTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFunctionalityWithBlankFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:17 IST" name="tearDown" finished-at="2023-04-24T11:39:18 IST" duration-ms="1920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:18 IST" name="setUp" finished-at="2023-04-24T11:39:22 IST" duration-ms="3428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginFunctionalityWithInvalidCredentials(java.lang.reflect.Method)[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:22 IST" name="verifyLoginFunctionalityWithInvalidCredentials" description="Verify that user is not able to sign in with invalid credentials" finished-at="2023-04-24T11:39:26 IST" duration-ms="3878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.qa.testcases.LoginPageTest.verifyLoginFunctionalityWithInvalidCredentials(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFunctionalityWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:26 IST" name="tearDown" finished-at="2023-04-24T11:39:27 IST" duration-ms="1435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:27 IST" name="setUp" finished-at="2023-04-24T11:39:30 IST" duration-ms="2709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginFunctionalityWithValidCredentials(java.lang.reflect.Method)[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:30 IST" name="verifyLoginFunctionalityWithValidCredentials" description="Verify that user is able to login into app with valid email and password" finished-at="2023-04-24T11:39:34 IST" duration-ms="3779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.test.qa.testcases.LoginPageTest.verifyLoginFunctionalityWithValidCredentials(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginFunctionalityWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test.qa.testcases.LoginPageTest@c333c60]" started-at="2023-04-24T11:39:34 IST" name="tearDown" finished-at="2023-04-24T11:39:35 IST" duration-ms="1281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test.qa.testcases.LoginPageTest -->
    </test> <!-- Regression test -->
  </suite> <!-- Luma ecommerce app test automation -->
</testng-results>
